;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Fri Jun 18 20:09:36 2010
;; Desktop file format version 206
;; Emacs version 23.0.91.1

;; Global section:
(setq extended-command-history '("ruby-end-of-block" "rename-file" "rename-buffer" "insert-kbd-macro" "kbd-macro-query" "call-last-kbd-macro" "isearch-forward" "slime-pprint-eval-last-expression"))
(setq file-name-history '("~/.emacs.d/org-clock-save.el" "~/.emacs.d/elpa/ruby-electric-1.1/ruby-electric-autoloads.el" "~/.emacs.d/elpa/ruby-compilation-0.7/ruby-compilation-autoloads.el" "~/.emacs.d/elpa/rspec-mode-0.2/rspec-mode-autoloads.el" "~/.emacs.d/elpa/inf-ruby-2.1/inf-ruby-autoloads.el" "~/.emacs.d/elpa/ruby-mode-1.1/ruby-mode-autoloads.el" "/home/m4nic/Lab/ruby/drp/test1.rb" "~/Sites/slutmachines.com/src/inno/sql/deftable.clj" "/home/m4nic/Sites/slutmachines.com/src/casino/model/tables.clj" "~/Sites/slutmachines.com/lib/clojure-contrib-1.2.0-20100608.210420-126.jar" "/home/m4nic/Sites/slutmachines.com/lib/hiccup-0.2.4.jar" "/home/m4nic/Sites/slutmachines.com/test/casino/model/account_test.clj" "/home/m4nic/Sites/slutmachines.com/default-config.clj" "/home/m4nic/Sites/slutmachines.com/src/casino/model/config.clj" "/home/m4nic/Sites/slutmachines.com/src/casino/model.clj" "~/Sites/slutmachines.com/default-config.clj" "/home/m4nic/Sites/slutmachines.com/src/casino/model/player.clj" "/home/m4nic/Sites/slutmachines.com/src/clocks/jquery.clj" "/home/m4nic/Lab/clojure/clocks/_ref/hiccup/src/hiccup/core.clj" "/home/m4nic/Lab/clojure/clocks/src/clocks/data.clj" "~/Sites/slutmachines.com/lib/clocks-0.7.jar" "/home/m4nic/Sites/boymaas.nl/posts/2010-02-09-a-haskel-blog.markdown" "~/Sites/boymaas.nl/posts/2010-06-15-clocks-portmortem.markdown" "~/Sites/slutmachines.com/lib/clocks-0.7.jar" "~/Sites/slutmachines.com/lib/clocks-0.6.jar" "~/Sites/slutmachines.com/lib/scriptjure-0.1.8.jar" "~/Sites/slutmachines.com/lib/clocks-0.6.jar" "/home/m4nic/Sites/slutmachines.com/src/forms.clj" "/home/m4nic/Sites/slutmachines.com/public/style.css" "/home/m4nic/Sites/slutmachines.com/jquery-lib/jquery-validate/localization/messages_nl.js" "/home/m4nic/Sites/slutmachines.com/jquery-lib/jquery-validate/jquery.validate.js" "/home/m4nic/Sites/slutmachines.com/public/jquery.validate.min.js" "/home/m4nic/Lab/clojure/clocks/README.markdown" "~/Lab/clojure/clocks/clocks.jar" "~/Sites/slutmachines.com/lib/clocks-0.6.jar" "/home/m4nic/Lab/clojure/clocks/src/examples/login.clj"))
(setq ido-last-directory-list '(("/home/m4nic/Lab/ruby/" . "drp/") ("/home/m4nic/Sites/slutmachines.com/test/casino/" . "model/") ("/home/m4nic/Sites/slutmachines.com/test/" . "casino/") ("/home/m4nic/Sites/slutmachines.com/src/casino/" . "model/") ("/home/m4nic/Lab/clojure/clocks/_ref/hiccup/src/" . "hiccup/") ("/home/m4nic/Lab/clojure/clocks/_ref/hiccup/" . "src/") ("/home/m4nic/Sites/boymaas.nl/" . "posts/") ("/home/m4nic/Sites/slutmachines.com/jquery-lib/jquery-validate/" . "localization/") ("/home/m4nic/Sites/slutmachines.com/jquery-lib/" . "jquery-validate/") ("/home/m4nic/Lab/clojure/clocks/test/" . "clocks/") ("/home/m4nic/Sites/slutmachines.com/_ref/compojure/test/compojure/" . "test/") ("/home/m4nic/Sites/slutmachines.com/_ref/compojure/test/" . "compojure/") ("/home/m4nic/Sites/slutmachines.com/_ref/sandbar/modules/sandbar-session/src/" . "sandbar/") ("/home/m4nic/Sites/slutmachines.com/_ref/sandbar/modules/sandbar-session/" . "src/") ("/home/m4nic/Lab/clojure/clocks/_ref/swank-clojure/src/swank/" . "clj_contrib/") ("/home/m4nic/Lab/clojure/clocks/_ref/swank-clojure/src/" . "swank/") ("/home/m4nic/Lab/clojure/clocks/_ref/swank-clojure/" . "src/") ("/home/m4nic/Lab/clojure/clocks/_ref/scriptjure/src/com/" . "reasonr/") ("/home/m4nic/Lab/clojure/clocks/_ref/scriptjure/src/" . "com/") ("/home/m4nic/Lab/clojure/clocks/_ref/scriptjure/" . "src/") ("/home/m4nic/Personal/Administration/companies/innovita.nl/2010/" . "facturen/") ("/home/m4nic/Personal/Administration/companies/innovita.nl/" . "2010/") ("/home/m4nic/Personal/Administration/companies/" . "innovita.nl/") ("/home/m4nic/Personal/Administration/" . "companies/") ("/home/m4nic/Personal/Planning/" . "innovita/") ("/home/m4nic/Lab/clojure/clocks/_ref/" . "hiccup/") ("/home/m4nic/Lab/clojure/clocks/" . "_ref/") ("/home/m4nic/Sites/slutmachines.com/_ref/sandbar/modules/sandbar-dev/src/" . "sandbar/") ("/home/m4nic/Sites/slutmachines.com/_ref/sandbar/modules/sandbar-dev/" . "src/") ("/home/m4nic/Sites/slutmachines.com/_ref/compojure/src/" . "compojure/") ("/home/m4nic/Sites/slutmachines.com/_ref/compojure/" . "test/") ("/home/m4nic/Lab/clojure/clocks/src/" . "examples/") ("/home/m4nic/Sites/slutmachines.com/_ref/sandbar/examples/src/" . "example/") ("/home/m4nic/Sites/slutmachines.com/_ref/sandbar/examples/" . "src/") ("/home/m4nic/Sites/slutmachines.com/_ref/sandbar/modules/sandbar-auth/src/" . "sandbar/") ("/home/m4nic/Sites/slutmachines.com/_ref/sandbar/modules/sandbar-auth/" . "src/") ("/home/m4nic/Sites/slutmachines.com/_ref/sandbar/modules/" . "sandbar-session/") ("/home/m4nic/Sites/slutmachines.com/_ref/sandbar/" . "modules/") ("/home/m4nic/Sites/docus.tv/static/" . "css/") ("/home/m4nic/Sites/docus.tv/" . "static/") ("~/Personal/Planning/" . "concepts/") ("/home/m4nic/Sites/slutmachines.com/_ref/ring/ring-servlet/src/ring/" . "util/") ("/home/m4nic/Sites/slutmachines.com/_ref/ring/ring-servlet/src/" . "ring/") ("/home/m4nic/Sites/slutmachines.com/_ref/ring/ring-servlet/" . "src/") ("/home/m4nic/Sites/slutmachines.com/_ref/ring/ring-jetty-adapter/src/ring/" . "adapter/") ("/home/m4nic/Sites/slutmachines.com/_ref/ring/ring-jetty-adapter/src/" . "ring/") ("/home/m4nic/Sites/slutmachines.com/_ref/ring/ring-jetty-adapter/" . "src/") ("/home/m4nic/Sites/slutmachines.com/_ref/ring/" . "ring-servlet/") ("/home/m4nic/Sites/slutmachines.com/_ref/" . "compojure/") ("/home/m4nic/Lab/clojure/jfastcgi/fastcgi/src/" . "fastcgi/") ("/home/m4nic/Lab/clojure/jfastcgi/fastcgi/" . "src/") ("/home/m4nic/Lab/clojure/jfastcgi/" . "fastcgi/") ("/home/m4nic/Sites/slutmachines.com/lab/games/flas/" . "clubk/") ("/home/m4nic/Sites/slutmachines.com/lab/games/" . "flas/") ("/home/m4nic/Sites/slutmachines.com/lab/" . "games/") ("/home/m4nic/Sites/slutmachines.com/src/" . "clocks/") ("/home/m4nic/.emacs.d/" . "elpa/") ("/home/m4nic/" . "Sites/") ("/home/m4nic/Lab/clojure/Gajure/src/" . "gajure/") ("/home/m4nic/Lab/clojure/Gajure/" . "src/") ("/home/m4nic/Lab/clojure/" . "clocks/") ("/home/m4nic/Lab/" . "ruby/") ("/home/m4nic/Sites/slutmachines.com/" . "test/") ("/home/m4nic/Sites/" . "boymaas.nl/") ("/home/m4nic/Projects/clojure/server/casino/public/games/flas/" . "clubk/") ("/home/m4nic/Projects/clojure/server/casino/public/games/" . "flas/") ("/home/m4nic/Projects/clojure/server/casino/public/" . "games/") ("/home/m4nic/Projects/clojure-examples/compojure.org/public/" . "img/") ("/home/m4nic/Projects/clojure-examples/compojure.org/src/org/" . "compojure/") ("/home/m4nic/Projects/clojure-examples/compojure.org/src/" . "org/") ("/home/m4nic/Projects/clojure-examples/compojure.org/" . "pages/") ("/home/m4nic/Projects/clojure-examples/" . "compojure.org/") ("/home/m4nic/Projects/python/market/market/systemtest/config/" . "markets/") ("/home/m4nic/Projects/python/market/market/tests/" . "fixtures/") ("/home/m4nic/Projects/python/market/market/systemtest/" . "cases/") ("~/Projects/python/" . "market/") ("~/Projects/" . "python/") ("/home/m4nic/Projects/clojure/server/casino/src/casino/" . "model/") ("/home/m4nic/Projects/clojure/server/casino/src/" . "casino/") ("/home/m4nic/Projects/clojure/server/casino/" . "public/") ("/home/m4nic/Projects/clojure/server/" . "casino/") ("/home/m4nic/Personal/personal/writings/programming/" . "python/") ("/home/m4nic/Personal/personal/writings/philosophy/" . "_attic/") ("/home/m4nic/Personal/personal/writings/" . "philosophy/") ("/home/m4nic/Personal/personal/" . "writings/") ("/home/m4nic/Projects/clojure-src/clojure-contrib/src/clojure/contrib/test_contrib/" . "pprint/") ("/home/m4nic/Projects/clojure/blog/src/" . "org_file/") ("/home/m4nic/Projects/clojure/blog/" . "test-org-files/") ("/home/m4nic/.emacs.d/site-lisp/yasnippet-0.6.0c/snippets/text-mode/" . "org-mode/") ("/home/m4nic/.emacs.d/site-lisp/yasnippet-0.6.0c/snippets/" . "text-mode/") ("/home/m4nic/.emacs.d/site-lisp/yasnippet-0.6.0c/" . "snippets/") ("/home/m4nic/Personal/" . "Administration/") ("/home/m4nic/.emacs.d/elpa/" . "clojure-mode-1.7.1/") ("/usr/share/emacs/23.0.91/lisp/" . "emulation/") ("/usr/share/emacs/site-lisp/" . "emacs-goodies-el/") ("/usr/share/emacs/23.0.91/" . "leim/") ("/usr/share/emacs/" . "23.0.91/") ("/home/m4nic/Projects/clojure/casino/src/casino/" . "core/") ("/home/m4nic/Projects/clojure/casino/src/inno/" . "sql/") ("/home/m4nic/Projects/clojure-src/clojure/src/clj/" . "clojure/")))
(setq ido-work-directory-list '("/home/m4nic/Lab/ruby/drp/" "/home/m4nic/Sites/slutmachines.com/src/casino/model/" "/home/m4nic/Sites/slutmachines.com/lib/" "/home/m4nic/Sites/slutmachines.com/test/casino/model/" "/home/m4nic/Sites/slutmachines.com/" "/home/m4nic/Sites/slutmachines.com/src/casino/" "/home/m4nic/Sites/slutmachines.com/src/clocks/" "/home/m4nic/Lab/clojure/clocks/_ref/hiccup/src/hiccup/" "/home/m4nic/Lab/clojure/clocks/src/clocks/" "/home/m4nic/Sites/boymaas.nl/posts/" "/home/m4nic/Sites/slutmachines.com/src/" "/home/m4nic/Sites/slutmachines.com/public/" "/home/m4nic/Sites/slutmachines.com/jquery-lib/jquery-validate/localization/" "/home/m4nic/Sites/slutmachines.com/jquery-lib/jquery-validate/" "/home/m4nic/Lab/clojure/clocks/" "/home/m4nic/Lab/clojure/clocks/src/examples/" "/home/m4nic/Sites/slutmachines.com/src/games/" "/home/m4nic/Sites/slutmachines.com/src/pmatrix/" "/home/m4nic/.emacs.d/elpa/clojure-mode-1.7.1/" "/home/m4nic/.emacs.d/" "/home/m4nic/Lab/clojure/clocks/test/clocks/" "/home/m4nic/Sites/slutmachines.com/_ref/compojure/test/compojure/test/" "/home/m4nic/Sites/slutmachines.com/_ref/compojure/src/compojure/" "/home/m4nic/Sites/slutmachines.com/_ref/sandbar/modules/sandbar-session/src/sandbar/" "/home/m4nic/Lab/clojure/clocks/_ref/swank-clojure/src/swank/clj_contrib/" "/home/m4nic/Lab/clojure/clocks/_ref/swank-clojure/src/swank/commands/" "/home/m4nic/Lab/clojure/clocks/_ref/scriptjure/src/com/reasonr/" "/home/m4nic/Lab/clojure/clocks/_ref/scriptjure/" "/home/m4nic/.emacs.d/elpa/slime-20100404/" "/home/m4nic/" "/home/m4nic/Personal/Administration/companies/innovita.nl/2010/facturen/" "/home/m4nic/Personal/" "/home/m4nic/Personal/Planning/" "/home/m4nic/Sites/slutmachines.com/_ref/sandbar/modules/sandbar-dev/src/sandbar/" "/home/m4nic/Sites/slutmachines.com/_ref/sandbar/examples/src/example/" "/home/m4nic/Sites/slutmachines.com/_ref/sandbar/modules/sandbar-auth/src/sandbar/" "/home/m4nic/Sites/docus.tv/static/css/" "/home/m4nic/.emacs.d/site-lisp/paredit/" "/home/m4nic/Sites/slutmachines.com/_ref/ring/ring-servlet/src/ring/util/" "/home/m4nic/Sites/slutmachines.com/_ref/ring/ring-jetty-adapter/src/ring/adapter/" "/home/m4nic/Lab/clojure/jfastcgi/fastcgi/src/fastcgi/" "/home/m4nic/Lab/clojure/" "/home/m4nic/Sites/slutmachines.com/lab/games/flas/clubk/" "/home/m4nic/.emacs.d/site-lisp/vimpulse/" "/home/m4nic/Lab/clojure/Gajure/src/gajure/" "/home/m4nic/Lab/clojure/Gajure/src/Example/" "/home/m4nic/Projects/haxe/" "/home/m4nic/Projects/clojure/server/casino/public/games/flas/clubk/" "/home/m4nic/Projects/clojure/server/casino/src/casino/game/" "/home/m4nic/Desktop/Psych/"))
(setq ido-work-file-list '("test1.rb" "tables.clj" "hiccup-0.2.4.jar" "account_test.clj" "default-config.clj" "config.clj" "model.clj" "player.clj" "jquery.clj" "core.clj"))
(setq grep-history '("grep -nH -r . -e trace" "grep -nH -r . -e assert" "grep -nH -e -r . assert" "grep -nH -e -r assert ." "grep -nH -e -r . assert" "grep -nH -e -r assert" "grep -nH -e assert" "grep -nH -e assert.*keyword" "grep -nH -e " "grep -nH -e cl-format -r ." "grep -nH -e org-src-lang-modes -r ." "grep -nH -e '\\w\\+\\.account\\.transfer' -r ./ --exclude-dir .svn" "grep -nH -e org-cycle -r ." "grep -nH -e '\\w\\+\\.account\\.transfer' -r ../model/ --exclude-dir .svn" "grep -nH -e '\\w\\+\\.account' -r ../model/ --exclude-dir .svn" "grep -nH -e '\\w+\\.account' -r ../model/ --exclude-dir .svn" "grep -nH -e Account -r ../model/ --exclude-dir .svn" "grep -nH -e Account -r ./ --exclude-dir .svn" "grep -nH -e warning -r ./ --exclude-dir .svn" "grep -nH -e 'org-.*-face' -r ../org-mode/lisp/" "grep -nH -e tipbox -r . --exclude-dir .svn" "grep -nH -e tipbox -r . --exclude .svn" "grep -nH -e tipbox -r ."))
(setq compile-history nil)
(setq minibuffer-history '("inf-" "rub" "inf-r" "smex" "pa" "ruby" "fortune" "kill-" "4005" "127.0.0.1" "sl" "4005" "127.0.0.1" "4005" "127.0.0.1" "slim" "git" "4005" "127.0.0.1" "4005" "127.0.0.1" "4005" "127.0.0.1" "4005" "127.0.0.1" "4005" "127.0.0.1" "slime-expan" "4005" "127.0.0.1"))
(setq query-replace-history '("clocks-uri" "block-uri" "defn" "defn-" "vsf:block->vsf:fn-call" "vsf:block->vsf->fn-call" "body->vsf:fn-call" "body->vsf-callblock" "body->vsf" "body->vsf-block" "vsf:block->vsf->fn-call" "vsf-block->vsf-callblock" "walker" "inner" "`" "'" "(def" "(def" "" "specialforms->route-map" "vsf->msf" "specialforms->route-map" "b" "form" "special-form" "block-route" "expand-js-macros" "render-js-forms" "block" "defblock"))
(setq read-expression-history '("ANY"))
(setq regexp-history nil)
(setq regexp-search-ring '("ruby" "type to" "help" "block" "unique" "wrap-jso" "font-size" "prepend" "callblock" "map\\?" "clpartial" "macroexpan" "stuff" "walk" "assert" "key"))
(setq search-ring nil)
(setq shell-command-history nil)
(setq tags-file-name nil)
(setq register-alist (list '(111 . "(defpage index \"/index\"\n  (html [:html\n         [:head\n          [:title \"Welcome\"]]\n         [:body\n          [:h1 \"login\"]\n          (defblock login-form []\n            [:form {:method :post}\n             (defblock email [email]\n               [:input {:type :text\n                        :value email\n                        :onchange (str \"$(this).post(\" (block-url :email-msg) r* \", {email: this.value})\")}])\n             (defblock email-msg [email]\n               (if-let [msg (validate-email email)]\n                 [:div.errormsg msg]))])]]))") '(26 file-query "/home/m4nic/Sites/slutmachines.com/lib/compojure-0.4.0-RC3.jar:compojure/core.clj" 2142) '(25 file-query "/home/m4nic/Sites/slutmachines.com/lib/compojure-0.4.0-RC3.jar:compojure/core.clj" 2142) '(97 . "  (let [route-map (vsf->route-map prefix vsf)]\n") '(20 file-query "/home/m4nic/.emacs.d/init.el" 228) (desktop-list* 2 (let ((mk (make-marker))) (add-hook 'desktop-delay-hook (list 'lambda '() (list 'set-marker mk nil (get-buffer " *temp*")))) mk)) '(1 file-query "/home/m4nic/.emacs.d/init.el" 4871) (list 82 "Unprintable entity" (let ((mk (make-marker))) (add-hook 'desktop-delay-hook (list 'lambda '() (list 'set-marker mk nil (get-buffer " *temp*")))) mk))))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 206
  "/home/m4nic/Lab/ruby/drp/test1.rb"
  "test1.rb"
  'ruby-mode
  '(yas/minor-mode auto-complete-mode)
  163
  '(265 t)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/home/m4nic/.emacs.d/elpa/ruby-mode-1.1/ruby-mode-autoloads.el"
  "ruby-mode-autoloads.el"
  'emacs-lisp-mode
  '(yas/minor-mode auto-complete-mode paredit-mode eldoc-mode)
  982
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/home/m4nic/.emacs.d/elpa/inf-ruby-2.1/inf-ruby-autoloads.el"
  "inf-ruby-autoloads.el"
  'emacs-lisp-mode
  '(yas/minor-mode auto-complete-mode paredit-mode eldoc-mode)
  1246
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/home/m4nic/.emacs.d/elpa/rspec-mode-0.2/rspec-mode-autoloads.el"
  "rspec-mode-autoloads.el"
  'emacs-lisp-mode
  '(yas/minor-mode auto-complete-mode paredit-mode eldoc-mode)
  1240
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/home/m4nic/.emacs.d/elpa/ruby-compilation-0.7/ruby-compilation-autoloads.el"
  "ruby-compilation-autoloads.el"
  'emacs-lisp-mode
  '(yas/minor-mode auto-complete-mode paredit-mode eldoc-mode)
  1221
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/home/m4nic/.emacs.d/elpa/ruby-electric-1.1/ruby-electric-autoloads.el"
  "ruby-electric-autoloads.el"
  'emacs-lisp-mode
  '(yas/minor-mode auto-complete-mode paredit-mode eldoc-mode)
  930
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix)))

