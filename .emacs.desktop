;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Tue Aug 25 17:22:43 2009
;; Desktop file format version 206
;; Emacs version 23.0.91.1

;; Global section:
(setq extended-command-history nil)
(setq file-name-history '("~/Projects/clojure-src/clojure-contrib/src" "/home/m4nic/.clojure.conf" "/home/m4nic/.emacs.d/init.el" "/home/m4nic/.emacs.d/site-lisp/clojure-mode/clojure-mode.el" "/home/m4nic/Projects/clojure-code/mona-clojure/mona-clojure.clj" "/home/m4nic/Projects/clojure-code/ants.clj" "~/.emacs.d/elpa/clojure-mode-1.1/clojure-mode.el" "/home/m4nic/.emacs.d/site-lisp/swank-clojure/swank-clojure.el" "/home/m4nic/.emacs.d/site-lisp/swank-clojure/swank-clojure-autoload.el" "/home/m4nic/Projects/clojure-code/introduction.clj" "/home/m4nic/Projects/clojure/learn.clj" "~/.emacs.d/init-clojure.el" "/home/m4nic/Projects/clojure/learn.clj" "/home/m4nic/Planning/innovita.gtd" "/home/m4nic/.emacs.d/site-lisp/vtags/vtags.el" "/projects/pylons/shop/shop/tags" "/home/m4nic/.emacs.d/site-lisp/vtags/vtags.el" "/projects/pylons/shop/shop/tagall" "/projects/pylons/shop/tagall" "/projects/pylons/shop/shop/templates/admin/coupons/list.mak" "/projects/pylons/shop/shop/model/datamodel.py" "/projects/pylons/shop/shop/model/__init__.py" "/home/m4nic/Planning/innovita.gtd" "/projects/pylons/shop/shop/svn-migrations/00-coupons.sql" "/projects/pylons/shop/shop/svn-migrations/README.txt" "/projects/pylons/shop/shop/controllers/counter.py" "/projects/pylons/shop/shop/model/datamodel.py" "/projects/pylons/shop/shop/controllers/admin/coupons.py" "/projects/pylons/shop/shop/controllers/admin/__init__.py" "/home/m4nic/.emacs.d/init-org.el"))
(setq ido-last-directory-list '(("/home/m4nic/Projects/clojure-code/" . "mona-clojure/") ("/projects/pylons/shop/" . "shop/") ("/projects/pylons/shop/shop/templates/admin/" . "coupons/") ("/projects/pylons/shop/shop/templates/" . "admin/") ("/projects/pylons/shop/shop/controllers/" . "admin/") ("/projects/pylons/" . "shop/") ("/home/m4nic/Projects/python/market/market/lib/snapshot/" . "config/") ("/home/m4nic/Planning/attachments/" . "art-of-assembly-programming/") ("/home/m4nic/Desktop/" . "Pragmatic.Bookshelf.Programming.Clojure.May.2009.eBook-BBL/") ("/home/m4nic/Projects/python/market/market/public/jquery-boy/css/" . "le-frog/") ("/home/m4nic/Projects/python/market/market/public/jquery-boy/" . "css/") ("/home/m4nic/Projects/python/market/market/public/" . "jquery-boy/") ("/home/m4nic/Projects/python/market/market/model/" . "objects/") ("/home/m4nic/Projects/python/market/market/lib/" . "snapshot/") ("~/Projects/python/market/market/" . "config/") ("/home/m4nic/.emacs.d/site-lisp/org-mode/contrib/" . "lisp/") ("/projects/" . "pylons/") ("/projects/pylons/shop/shop/" . "templates/") ("/etc/" . "X11/") ("/home/m4nic/.emacs.d/site-lisp/pymacs/python-site-dir/" . "ropemode/") ("/home/m4nic/.emacs.d/site-lisp/pymacs/" . "python-site-dir/") ("/home/m4nic/Projects/python/market/" . "market/") ("/home/m4nic/Projects/emacs-examples/conf-0-first-attempt/" . "auto-save-list/") ("/home/m4nic/.emacs.d/site-lisp/org-mode/" . "lisp/") ("/home/m4nic/Projects/haskell/bolt/" . "bolt-cabal/") ("/home/m4nic/Planning/data/" . "6d/") ("/home/m4nic/.emacs.d/site-lisp/" . "clojure-mode/") ("/home/m4nic/Projects/emacs-examples/" . "conf-0-first-attempt/") ("/home/m4nic/Planning/" . "attachments/") ("/usr/share/emacs22/" . "site-lisp/") ("/usr/share/" . "emacs22/") ("/home/m4nic/Projects/emacs/" . "Pymacs-0.23/") ("/home/m4nic/Projects/python/market/market/templates/" . "community/") ("/home/m4nic/Projects/python/market/market/" . "model/") ("/home/m4nic/Projects/python/" . "market/") ("/home/m4nic/Projects/haskell/bolt/mks/" . "app/") ("/home/m4nic/Projects/lisp/clbuild/source/" . "casino/") ("/usr/" . "share/") ("/home/" . "m4nic/") ("/home/m4nic/" . ".emacs.d/") ("/" . "home/") ("/home/m4nic/.emacs.d/site-dir/" . "icicles/") ("/home/m4nic/.emacs.d/" . "site-lisp/") ("/home/m4nic/Projects/lisp/clbuild/" . "source/") ("/home/m4nic/Projects/lisp/" . "clbuild/") ("/home/m4nic/Projects/" . "python/")))
(setq ido-work-directory-list '("/home/m4nic/" "/home/m4nic/.emacs.d/" "/home/m4nic/.emacs.d/site-lisp/clojure-mode/" "/home/m4nic/Projects/clojure-code/mona-clojure/" "/home/m4nic/Projects/clojure-code/" "/home/m4nic/.emacs.d/site-lisp/swank-clojure/" "/home/m4nic/Projects/clojure/" "/home/m4nic/Planning/" "/home/m4nic/.emacs.d/site-lisp/vtags/" "/projects/pylons/shop/shop/" "/projects/pylons/shop/" "/projects/pylons/shop/shop/templates/admin/coupons/" "/projects/pylons/shop/shop/model/" "/projects/pylons/shop/shop/svn-migrations/" "/projects/pylons/shop/shop/controllers/" "/projects/pylons/shop/shop/controllers/admin/" "/home/m4nic/Planning/support/" "/home/m4nic/Projects/python/org-mode/" "/home/m4nic/Projects/python/market/" "/home/m4nic/.emacs.d/site-lisp/color-theme-tango-2/" "/home/m4nic/.emacs.d/site-lisp/org-mode/lisp/" "/home/m4nic/Projects/python/market/market/lib/snapshot/config/" "/home/m4nic/Projects/python/market/market/model/objects/" "/home/m4nic/Projects/python/market/market/templates/community/" "/home/m4nic/Projects/python/market/market/" "/home/m4nic/Projects/python/market/market/controllers/" "/home/m4nic/Projects/python/market/market/model/" "/home/m4nic/Projects/python/market/market/public/jquery-boy/css/le-frog/" "/home/m4nic/Projects/python/market/market/templates/trading/" "/home/m4nic/Projects/python/market/market/public/" "/home/m4nic/Projects/python/market/market/templates/" "/home/m4nic/Projects/python/market/market/templates/account/" "/home/m4nic/Projects/python/market/cron/" "/home/m4nic/Projects/python/market/market/lib/" "/home/m4nic/Projects/python/market/bin/" "/home/m4nic/Projects/python/market/market/forms/" "/home/m4nic/Projects/python/market/market/lib/bots/" "/home/m4nic/Projects/python/market/market/config/" "/home/m4nic/.emacs.d/site-lisp/ejumplist/" "/home/m4nic/.emacs.d/site-lisp/auto-complete/" "/home/m4nic/Projects/python/market/.ropeproject/" "/home/m4nic/.emacs.d/site-lisp/yasnippet-0.6.0c/" "~/Projects/python/market/market/config/" "/home/m4nic/.emacs.d/site-lisp/python-mode/" "/home/m4nic/.emacs.d/site-lisp/org-mode/contrib/lisp/" "/tmp/" "/home/m4nic/Planning/projects/" "/projects/pylons/shop/shop/templates/" "/projects/pylons/shop/shop/public/" "~/Planning/"))
(setq ido-work-file-list '(".clojure.conf" "init.el" "clojure-mode.el" "mona-clojure.clj" "ants.clj" "swank-clojure.el" "swank-clojure-autoload.el" "introduction.clj" "learn.clj" "innovita.gtd"))
(setq grep-history '("grep -nH -e '\\w\\+\\.account\\.transfer' -r ./ --exclude-dir .svn" "grep -nH -e org-cycle -r ." "grep -nH -e '\\w\\+\\.account\\.transfer' -r ../model/ --exclude-dir .svn" "grep -nH -e '\\w\\+\\.account' -r ../model/ --exclude-dir .svn" "grep -nH -e '\\w+\\.account' -r ../model/ --exclude-dir .svn" "grep -nH -e Account -r ../model/ --exclude-dir .svn" "grep -nH -e Account -r ./ --exclude-dir .svn" "grep -nH -e warning -r ./ --exclude-dir .svn" "grep -nH -e 'org-.*-face' -r ../org-mode/lisp/" "grep -nH -e tipbox -r . --exclude-dir .svn" "grep -nH -e tipbox -r . --exclude .svn" "grep -nH -e tipbox -r ."))
(setq compile-history nil)
(setq minibuffer-history '("recur" "au" "slim" "rever" "cl" "slime-" "slime" "emacs-lisp-mode" "sgml-mode" "org-mode" "python-mode" "re" "slim" "slim-c" "clojure-mode" "/home/m4nic/Projects/clojure-src" "/home/m4nic/Projects/closure" "cl" "aborcon" "slime-c" "slime-ab" "slime-cl" "slime-connect" "slime-ab" "sme" "slime-mode" "svn-status" "slime-c" "rev" "sme"))
(setq query-replace-history '("\\1:@\\2" "\\(\\*\\+.*\\):\\([a-z]\\)" ":@\\1" "\\*.*:\\([a-z]\\)" ":@\\1" ":\\([a-z]\\)" ":@\\1" ":\\([a-z]\\)" ":@\\1" ":\\([a-z]\\)" ":@\\1" ":\\([a-z])" ":@\\1" ":([a-z])" ":@\\1" ":[a-z]" ";" "." ";" "^"))
(setq read-expression-history nil)
(setq regexp-history nil)
(setq regexp-search-ring '("Pa" "snapshot" "snapshots" "classes" "tab" "tab>" "TAB" "pymacs" "colview" "custom-" "el" "len(" "get_" "get" "import" "i"))
(setq search-ring nil)
(setq shell-command-history nil)
(setq tags-file-name "/projects/pylons/shop/shop/TAGS")
(setq register-alist (list (desktop-list* 1 (let ((mk (make-marker))) (add-hook 'desktop-delay-hook (list 'lambda '() (list 'set-marker mk 408 (get-buffer "mona-clojure.clj")))) mk)) (list 82 "Unprintable entity" (let ((mk (make-marker))) (add-hook 'desktop-delay-hook (list 'lambda '() (list 'set-marker mk nil (get-buffer " *temp*")))) mk))))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 206
  "/home/m4nic/.emacs.d/site-lisp/clojure-mode/clojure-mode.el"
  "clojure-mode.el"
  'emacs-lisp-mode
  '(yas/minor-mode auto-complete-mode eldoc-mode paredit-mode)
  22162
  '(24774 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/home/m4nic/.clojure.conf"
  ".clojure.conf"
  'conf-unix-mode
  '(yas/minor-mode)
  176
  '(137 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  nil
  "clojure"
  'dired-mode
  '(yas/minor-mode)
  269
  '(nil nil)
  t
  '("/home/m4nic/Projects/clojure-src/clojure-contrib/src/clojure/")
  nil)

(desktop-create-buffer 206
  nil
  "contrib"
  'dired-mode
  '(yas/minor-mode)
  281
  '(nil nil)
  t
  '("/home/m4nic/Projects/clojure-src/clojure-contrib/src/clojure/contrib/")
  nil)

(desktop-create-buffer 206
  nil
  "src"
  'dired-mode
  '(yas/minor-mode)
  261
  '(nil nil)
  t
  '("/home/m4nic/Projects/clojure-src/clojure-contrib/src/")
  nil)

(desktop-create-buffer 206
  "/home/m4nic/.emacs.d/init.el"
  "init.el"
  'emacs-lisp-mode
  '(yas/minor-mode auto-complete-mode eldoc-mode paredit-mode)
  1093
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/home/m4nic/Projects/clojure-code/mona-clojure/mona-clojure.clj"
  "mona-clojure.clj"
  'clojure-mode
  '(yas/minor-mode auto-complete-mode eldoc-mode paredit-mode slime-mode)
  8192
  '(579 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/home/m4nic/Projects/clojure-code/introduction.clj"
  "introduction.clj"
  'clojure-mode
  '(yas/minor-mode auto-complete-mode eldoc-mode paredit-mode slime-mode)
  373
  '(1081 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/home/m4nic/Projects/clojure-code/ants.clj"
  "ants.clj"
  'clojure-mode
  '(yas/minor-mode auto-complete-mode eldoc-mode paredit-mode slime-mode)
  9461
  '(9461 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/home/m4nic/diary"
  "diary"
  'fundamental-mode
  nil
  1
  '(nil nil)
  nil
  nil
  nil)

