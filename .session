;;; Automatically generated on Sun Dec 25 22:23:20 2011
;;; Invoked by m4nic@KXCG-Maass-MacBook-Pro.local using 23.3.1
(setq-default kill-ring '(#("Link:
" 0 5 (fontified t) 5 6 (fontified t)) #("Added: [2011-12-25 Sun 22:21]
" 0 7 (fontified t) 7 28 (face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t fontified t) 28 29 (face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text) fontified t) 29 30 (fontified t)) #("
" 0 1 (fontified t)) #("** TODO blah								:die:
" 0 1 (org-no-flyspell t face org-level-2 fontified t) 1 3 (org-no-flyspell t face org-level-2 fontified t) 3 7 (org-no-flyspell t face org-todo fontified t) 7 8 (org-no-flyspell t face org-level-2 fontified t) 8 20 (org-no-flyspell t face org-level-2 fontified t) 20 24 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t face (org-tag org-level-2) fontified t) 24 25 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t face (org-tag org-level-2) fontified t) 25 26 (org-no-flyspell t fontified t))))
(setq-default session-file-alist '(("~/Personal/Planning/journal.gtd" 224 225 1 nil nil 38 (overwrite-mode)) ("~/Personal/Planning/gtd.gtd" 1351 1332 1 nil nil 1351 (overwrite-mode)) ("~/Projects/emacs-starter-kit/init-org.el" 5070 319 1 nil nil 5041 (overwrite-mode)) ("~/Projects/emacs-starter-kit/init-org.el.bk" 152 813 1 nil nil 254 (overwrite-mode)) ("~/Projects/emacs-starter-kit/org-clock-save.el" 76 1 1 nil nil 76 (overwrite-mode)) ("/Applications/Emacs.app/Contents/Resources/lisp/org/org.el.gz" 308857 308973 1 nil nil 308859 (overwrite-mode)) ("~/Projects/emacs-starter-kit/init.el" 17709 12116 1 nil nil 12115 (overwrite-mode)) ("~/Projects/emacs-starter-kit/init-anything.el" 306 1 1 nil nil 307 (overwrite-mode)) ("~/Projects/emacs-starter-kit/init-ido.el" 1861 1263 1 nil nil 1508 (overwrite-mode)) ("~/Personal/Planning/gtd.gtd_archive" 317 1 1 nil nil 498 (overwrite-mode)) ("~/Sites/whitehartprods/app/models/product.rb" 45 355 1 nil nil 355 (overwrite-mode)) ("~/Sites/whitehartprods/spec/models/cart_spec.rb" 347 275 1 nil nil 297 (overwrite-mode)) ("~/Sites/whitehartprods/spec/models/product_spec.rb" 130 177 1 nil nil 159 (overwrite-mode)) ("~/Projects/emacs-starter-kit/init-ruby-mode.el" 2194 2128 1 nil nil 2154 (overwrite-mode)) ("~/Sites/whitehartprods/Gemfile" 1412 339 1 nil nil 1451 (overwrite-mode)) ("~/Sites/whitehartprods/spec/support/blueprints.rb" 581 321 1 nil nil 330 (overwrite-mode)) ("~/Sites/whitehartprods/app/uploaders/image_uploader.rb" 810 477 1 nil nil 476 (overwrite-mode)) ("~/.rvm/gems/ruby-1.8.7-p334@whitehartprods/bin/rspec" 217 202 1 nil nil nil (overwrite-mode)) ("~/Sites/whitehartprods/app/models/order.rb" 57 1 1 nil nil 58 (overwrite-mode)) ("~/Sites/whitehartprods/.gitignore" 176 1 1 nil nil 176 (overwrite-mode)) ("~/Sites/whitehartprods/public/.gitignore" 27 1 1 nil nil 27 (overwrite-mode)) ("~/Sites/whitehartprods/doc/.gitignore" 19 1 1 nil nil 19 (overwrite-mode)) ("~/Sites/whitehartprods/_design/images/.gitignore" 73 1 1 nil nil 73 (overwrite-mode)) ("~/Projects/emacs-starter-kit/init-rails.el" 476 1 1 nil nil 477 (overwrite-mode)) ("~/Sites/whitehartprods/db/schema.rb" 2026 1 1 nil nil 2072 (overwrite-mode)) ("~/Sites/whitehartprods/app/models/cart.rb" 108 142 1 nil nil 136 (overwrite-mode)) ("~/Sites/whitehartprods/app/models/cart_item.rb" 45 1 1 nil nil 65 (overwrite-mode)) ("~/Sites/whitehartprods/db/migrate/007_create_cart_items.rb" 175 1 1 nil nil 174 (overwrite-mode)) ("~/Sites/whitehartprods/app/models/order_line.rb" 81 1 1 nil nil 127 (overwrite-mode)) ("~/Sites/whitehartprods/doc/landing-page.mkd" 566 1 1 nil nil 565 (overwrite-mode)) ("~/Projects/emacs-starter-kit/custom.el" 1 1 1 nil nil 819 (overwrite-mode)) ("~/Sites/whitehartprods/app/models/user.rb" 369 304 1 nil nil 459 (overwrite-mode)) ("~/Sites/whitehartprods/app/controllers/products_controller.rb" 789 789 1 nil nil 789 (overwrite-mode)) ("~/Projects/emacs-starter-kit/site-lisp/anything/anything.el" 85019 85113 1 nil nil 85055 (overwrite-mode)) ("~/Sites/whitehartprods/app/controllers/home_controller.rb" 96 1 1 nil nil 96 (overwrite-mode)) ("~/Sites/whitehartprods/app/helpers/home_helper.rb" 23 1 1 nil nil 23 (overwrite-mode)) ("~/Sites/whitehartprods/app/controllers/application_controller.rb" 77 1 1 nil nil 60 (overwrite-mode)) ("~/Sites/whitehartprods/app/views/layouts/application.html.haml" 707 707 1 nil nil 679 (overwrite-mode)) ("~/Sites/whitehartprods/db/migrate/005_create_order_lines.rb" 285 1 1 nil nil 207 (overwrite-mode)) ("~/Sites/whitehartprods/db/migrate/004_create_orders.rb" 115 1 1 nil nil 116 (overwrite-mode)) ("~/Sites/whitehartprods/app/views/home/index.html.haml" 2397 2726 1 nil nil 2700 (overwrite-mode)) ("~/Sites/whitehartprods/app/views/layouts/_footer.html.haml" 38 1 1 nil nil 39 (overwrite-mode)) ("~/Sites/whitehartprods/app/stylesheets/partials/_page.sass" 2586 1357 1 nil nil 2585 (overwrite-mode)) ("~/Sites/whitehartprods/app/stylesheets/style.sass" 719 806 1 nil nil 779 (overwrite-mode)) ("~/Sites/whitehartprods/app/coffeescripts/home_index.coffee" 557 515 1 nil nil 512 (overwrite-mode)) ("~/Sites/whitehartprods/app/stylesheets/partials/_carousel.sass" 1707 314 1 nil nil 1708 (overwrite-mode)) ("~/Sites/whitehartprods/app/helpers/application_helper.rb" 283 1 1 nil nil 284 (overwrite-mode)) ("~/Sites/whitehartprods/public/vendor/jcarousel-gallery/css/skin.css" 146 1 1 nil nil 88 (overwrite-mode)) ("~/Sites/whitehartprods/public/vendor/jcarousel/skins/tango/skin.css" 272 606 1 nil nil 329 (overwrite-mode)) ("~/Sites/whitehartprods/app/views/layouts/.gitignore" 27 1 1 nil nil 27 (overwrite-mode)) ("~/Sites/whitehartprods/generate-tags.sh" 183 73 1 nil nil 78 (overwrite-mode)) ("~/Sites/whitehartprods/app/views/products/index.html.haml" 355 356 1 nil nil 354 (overwrite-mode)) ("~/Sites/whitehartprods/app/views/layouts/admin.html.haml" 60 136 1 nil nil 61 (overwrite-mode)) ("~/Sites/whitehartprods/app/stylesheets/partials/_fonts.sass" 204 206 1 nil nil 205 (overwrite-mode)) ("~/Sites/whitehartprods/app/views/layouts/_header.html.haml" 118 164 1 nil nil 164 (overwrite-mode)) ("~/Sites/whitehartprods/app/stylesheets/partials/tables.sass" 26 99 1 nil nil 27 (overwrite-mode)) ("~/Sites/whitehartprods/app/views/products/new.html.haml" 159 66 1 nil nil 133 (overwrite-mode)) ("~/Sites/whitehartprods/db/seeds.rb" 519 531 1 nil nil 463 (overwrite-mode)) ("~/Projects/emacs-starter-kit/elpa/inf-ruby-2.1/inf-ruby.el" 2226 1947 1 nil nil 1950 (overwrite-mode)) ("~/.irbrc" 2682 2053 1 nil nil 2055 (overwrite-mode)) ("~/Sites/boymaas-rails-template/partials/boilerplate.rb" 773 772 1 nil nil 668 (overwrite-mode)) ("~/Sites/boymaas-rails-template/partials/rvm.rb" 762 1 1 nil nil 878 (overwrite-mode)) ("~/Sites/boymaas-rails-template/partials/gemfile.rb" 1 1803 1 nil nil 1787 (overwrite-mode)) ("~/Sites/boymaas-rails-template/.gitignore" 28 1 1 nil nil 29 (overwrite-mode)) ("~/Sites/whitehartprods/app/views/layouts/_head.html.haml" 680 726 1 nil nil 725 (overwrite-mode)) ("~/Sites/boymaas-rails-template/template.rb" 1430 1 1 nil nil 1428 (overwrite-mode)) ("~/Sites/whitehartprods/config/database.yml" 60 1 1 nil nil 61 (overwrite-mode)) ("~/Sites/hypnotica/content.mkd" 31 1 1 nil nil 31 (overwrite-mode)) ("~/Projects/emacs-starter-kit/.viper" 825 1 1 nil nil 826 (overwrite-mode)) ("~/Sites/boymaas-rails-template/partials/barista.rb" 26 1 1 nil nil 27 (overwrite-mode)) ("/ssh:m4nic@dreamflyer.nl:/srv/innovita_data/projects/pylons/shop/shop/templates/counter/show_products/verzend_g4s.mak" 566 478 1 nil nil 567 (overwrite-mode)) ("~/Sites/boymaas-rails-template/partials/grid.rb" 209 2231 1 nil nil 81 (overwrite-mode)) ("~/Projects/emacs-starter-kit/elpa/rinari-2.1/rinari-autoloads.el" 897 1 1 nil nil 895 (overwrite-mode)) ("~/Sites/boymaas.nl/content/index.haml" 673 1 1 nil nil 674 (overwrite-mode)) ("~/Sites/boymaas.nl/content/portfolio/06_keygamesnetwork.haml" 3481 3260 1 nil nil 3481 (overwrite-mode)) ("~/Sites/boymaas.nl/layouts/work.haml" 276 1 1 nil nil 144 (overwrite-mode)) ("~/Personal/Planning/finance.mkd" 643 1945 1 nil nil 370 (overwrite-mode)) ("~/Projects/emacs-starter-kit/elpa/inflections-1.0/inflections-autoloads.el" 493 1 1 nil nil 493 (overwrite-mode)) ("~/Projects/emacs-starter-kit/elpa/findr-0.7/findr-autoloads.el" 170 1 1 nil nil 170 (overwrite-mode)) ("~/Projects/emacs-starter-kit/elpa/jump-2.0/jump-autoloads.el" 1353 1 1 nil nil 1353 (overwrite-mode)) ("~/Sites/casino/resources/public/js/script.coffee" 35 13 1 nil nil 36 (overwrite-mode)) ("~/Projects/emacs-starter-kit/elpa/js2-mode-20090723/js2-mode-autoloads.el" 422 1 1 nil nil 422 (overwrite-mode)) ("~/Sites/casino/docs/notes.mkd" 2030 2090 1 nil nil 2090 (overwrite-mode)) ("~/Projects/emacs-starter-kit/site-lisp/las3r/eval_pipe.rb" 2304 2293 1 nil nil 2763 (overwrite-mode)) ("~/Projects/emacs-starter-kit/site-lisp/las3r/las3r-mode.el" 1097 4885 1 nil nil 1096 (overwrite-mode)) ("~/Projects/emacs-starter-kit/elpa/http-post-simple-1.0/http-post-simple-autoloads.el" 1039 1 1 nil nil 1039 (overwrite-mode)) ("~/Sites/casino/support/las3r/src/as3/com/las3r/demo/garden/Garden.as" 203 1103 1 nil nil 59 (overwrite-mode)) ("~/Sites/casino/src/casino/views/welcome.clj" 599 599 1 nil nil 599 (overwrite-mode)) ("~/Sites/casino/Procfile" 35 1 1 nil nil 36 (overwrite-mode)) ("~/Sites/casino/src/casino/server.clj" 750 559 1 nil nil 559 (overwrite-mode)) ("~/Sites/casino/src/games/crisscross.clj" 8765 8765 1 nil nil 9333 (overwrite-mode)) ("~/Sites/casino/src/games/utils.clj" 1815 1819 1 nil nil 1816 (overwrite-mode)) ("~/Sites/casino/test/games/test/crisscross.clj" 1291 1088 1 nil nil 1081 (overwrite-mode)) ("~/Sites/casino/src/games/default.clj" 1390 1695 1 nil nil 1581 (overwrite-mode)) ("~/Sites/casino/test/casino/model/test/utils.clj" 1538 1557 1 nil nil 1553 (overwrite-mode)) ("~/Sites/casino/src/casino/model/game.clj" 4248 4207 1 nil nil 1164 (overwrite-mode)) ("~/Sites/casino/project.clj" 452 509 1 nil nil 453 (overwrite-mode)) ("~/Sites/casino/src/casino/views/state.clj" 703 562 1 nil nil 615 (overwrite-mode)) ("~/Sites/casino/test/casino/model/test/game.clj" 424 428 1 nil nil 424 (overwrite-mode)) ("~/Sites/casino/src/games/structs.clj" 877 901 1 nil nil 901 (overwrite-mode)) ("~/Sites/casino/.gitignore" 77 1 1 nil nil 77 (overwrite-mode))))
(setq-default file-name-history '("/Users/m4nic/Personal/Planning/journal.gtd" "~/.emacs.bmk" "~/Personal/Planning/gtd.gtd" "/Users/m4nic/.emacs.d/init-org.el" "/Users/m4nic/Personal/Planning/gtd.gtd" "/Users/m4nic/.emacs.d/init-org.el.bk" "~/.emacs.d/site-lisp/org-mode/lisp/org-install.el" "/Users/m4nic/.emacs.d/site-lisp/org-mode/lisp/org-macs.el" "/Users/m4nic/.emacs.d/site-lisp/org-mode/lisp/org-capture.el" "~/.emacs.d/site-lisp/org-mode/contrib/lisp/org-checklist.el" "/Users/m4nic/.emacs.d/init.el" "~/.emacs.d/org-clock-save.el" "/Users/m4nic/Personal/Planning/journal.org" "/Applications/Emacs.app/Contents/Resources/lisp/org/org-remember.el.gz" "/Applications/Emacs.app/Contents/Resources/lisp/org/org.el.gz" "~/Projects/emacs-starter-kit/init-org.el" "~/.emacs.d/custom.el" "~/Projects/emacs-starter-kit/custom.el" "/Users/m4nic/.emacs.d/init-ecb.el" "~/Personal/Planning/gtd.gtd_archive" "/Applications/Emacs.app/Contents/Resources/lisp/progmodes/etags.el.gz" "/Users/m4nic/.emacs.d/init-ido.el" "~/Sites/whitehartprods/TAGS" "~/Sites/whitehartprods/app/uploaders/image_uploader.rb" "/Users/m4nic/.emacs.d/site-lisp/anything/anything-config.el" "~/.rvm/gems/ruby-1.8.7-p334@whitehartprods/gems/actionpack-3.0.11/lib/action_controller/test_case.rb" "/Users/m4nic/.emacs.d/init-anything.el" "~/.rvm/gems/ruby-1.8.7-p334@whitehartprods/gems/actionpack-3.0.11/lib/action_view/helpers/asset_tag_helper.rb"))
(setq-default anything-c-adaptive-history '(("Lacarte" (isearch-forward ("search" . 1))) (command ("ruby-end-of-block" ("ruby" . 1)) ("rename-file" ("rename-file" . 1)) ("rename-buffer" ("rename" . 1)) ("insert-kbd-macro" ("kbd-macro" . 1)) ("kbd-macro-query" ("kbd-m" . 1)) ("call-last-kbd-macro" ("macro" . 1)) ("slime-pprint-eval-last-expression" ("pprint" . 1))) (function ("dired-rename-file" ("rename" . 1)) ("cl-prettyexpand" ("pretty" . 1))) (file ("/projects/pylons/shop/shop/controllers/counter.py" ("counter" . 2))) (buffer ("counter.py" ("" . 1)) ("python-mode.el" ("python" . 1)))))
(setq-default anything-c-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar (quote prin1-to-string) command-history)) (type . sexp)))
(setq-default anything-c-source-eshell-history '((name . "Eshell history") (init lambda nil (let (eshell-hist-ignoredups) (eshell-write-history eshell-history-file-name t) (with-current-buffer (anything-candidate-buffer (quote global)) (insert-file-contents eshell-history-file-name))) (remove-hook (quote minibuffer-setup-hook) (quote eshell-mode))) (candidates-in-buffer) (filtered-candidate-transformer lambda (candidates sources) (reverse candidates)) (candidate-number-limit . 9999) (action lambda (candidate) (eshell-kill-input) (insert candidate))))
(setq-default anything-c-source-etags+-history '((name . "Etags+ History: ") (header-name (lambda (name) (concat name "`RET': Go ,`C-z' Preview. `C-e': Clear all history."))) (init . anything-etags+-history-init) (candidates . anything-etags+-history-candidates) (action ("Go" . anything-etags+-history-action-go) ("Clear all history" . anything-etags+-history-clear-all))))
(setq-default anything-c-source-extended-command-history '((name . "Emacs Commands History") (candidates . extended-command-history) (type . command)))
(setq-default anything-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (match anything-c-match-on-file-name anything-c-match-on-directory-name) (type . file)))
(setq-default anything-c-source-global-mark-ring '((name . "global-mark-ring") (candidates . anything-c-source-global-mark-ring-candidates) (action ("Goto line" lambda (candidate) (let ((items (split-string candidate ":"))) (switch-to-buffer (second items)) (goto-line (string-to-number (car items)))))) (persistent-action lambda (candidate) (let ((items (split-string candidate ":"))) (switch-to-buffer (second items)) (goto-line (string-to-number (car items))) (anything-match-line-color-current-line)))))
(setq-default anything-c-source-kill-ring '((name . "Kill Ring") (init lambda nil (anything-attrset (quote last-command) last-command)) (candidates lambda nil (loop for kill in kill-ring unless (or (< (length kill) anything-kill-ring-threshold) (string-match "^[\\s\\t]+$" kill)) collect kill)) (action . anything-c-kill-ring-action) (last-command) (migemo) (multiline)))
(setq-default anything-c-source-mark-ring '((name . "mark-ring") (init lambda nil (setq anything-mark-ring-cache (anything-c-source-mark-ring-candidates))) (candidates lambda nil (anything-aif anything-mark-ring-cache it)) (action ("Goto line" lambda (candidate) (goto-line (string-to-number candidate)))) (persistent-action lambda (candidate) (goto-line (string-to-number candidate)) (anything-match-line-color-current-line))))
(setq-default anything-c-source-minibuffer-history '((name . "Minibuffer History") (header-name lambda (name) (format "%s (%s)" name minibuffer-history-variable)) (candidates lambda nil (let ((history (symbol-value minibuffer-history-variable))) (if (consp (car history)) (mapcar (quote prin1-to-string) history) history))) (migemo) (action . insert)))
(setq-default bookmark-history '("init.el" "cart_spec.rb"))
(setq-default buffer-name-history '(#("gtd.gtd" 0 7 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) #("init-org.el" 0 11 (face (ecb-history-dead-buffer-face) help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) "*scratch*" #("org-macs.el" 0 11 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) "*Org Select*" "*Messages*" "*Customize Option: Org Capture Templates*" "*Help*" "*Remember*" #("init-ecb.el" 0 11 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) "*Apropos*" "journal.org" #("anything-config.el" 0 18 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) #("init-ido.el" 0 11 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) "*Completions*" #("init.el" 0 7 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) #("init-anything.el" 0 16 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) #("product.rb" 0 10 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu"))))
(setq-default coding-system-history '("utf-8-unix" "unix" "iso-safe-unix" "iso-latin-1-unix" "adobe-standard-encoding-unix" "nil"))
(setq-default command-history '((find-file "/Users/m4nic/Personal/Planning/journal.gtd") (vimpulse-delete 415 421) (vimpulse-delete 1351 1357) (vimpulse-delete 1351 1381) (vimpulse-delete 1351 1352) (vimpulse-delete 1351 1377) (vimpulse-delete 152 153) (vimpulse-delete 8918 8919) (vimpulse-delete 8920 8921) (vimpulse-delete 213 214) (find-file "/Users/m4nic/.emacs.d/init-org.el") (vimpulse-change 209 212) (vimpulse-yank 195 214) (vimpulse-change 362 368) (vimpulse-yank 282 326) (vimpulse-delete 195 217) (vimpulse-delete 195 210) (switch-to-buffer #("gtd.gtd" 0 7 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu"))) (vimpulse-delete 324 325) (find-file "/Users/m4nic/Personal/Planning/gtd.gtd") (vimpulse-delete 609 610) (vimpulse-delete 610 5270) (vimpulse-delete 610 793) (vimpulse-delete 793 5270) (write-file "/Users/m4nic/.emacs.d/init-org.el.bk") (switch-to-buffer #("init-org.el" 0 11 (face (ecb-history-dead-buffer-face) help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu"))) (vimpulse-delete 232 233) (switch-to-buffer "*scratch*") (switch-to-buffer #("org-macs.el" 0 11 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu"))) (switch-to-buffer "*Org Select*") (find-file "/Users/m4nic/.emacs.d/site-lisp/org-mode/lisp/org-macs.el") (find-file "/Users/m4nic/.emacs.d/site-lisp/org-mode/lisp/org-capture.el")))
(setq-default find-tag-history '("org-string-nw-p" "MAJOR" "image" "ImageUploader" "uploads" "Ima" "get" "image_path" "product" #("etags-select-find-tag-at-point" 0 30 (fontified t)) #("Product" 0 7 (face font-lock-type-face fontified t)) "rspec-mode" "ruby-compilation-run" "with-anything-quittable" #("anything" 0 8 (fontified t)) "anything-action-window" #("HomeController" 0 14 (face font-lock-type-face fontified t)) "ApplicationController" "protect_from_forgery" #("protect" 0 7 (fontified t)) "number_to_currency" #("find" 0 4 (fontified t)) #("destroy" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (syntax-table nil fontified t)) "interactive" #("directory" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t))))
(setq-default global-mark-ring 'nil)
(setq-default grep-files-history '("ch" "el"))
(setq-default grep-history '("grep -nH -r -e apidoc ." "grep -nH -e apidoc ~/.emacs.d/elpa/" "grep -nH -e apidoc ." "grep -nH -e apidoc.com ." "grep -nH -i -e client -r ../../../" "grep -nH -i -e server -r ../../../" "grep -nH -i -e socket -r ../../../" "grep -nH -e " "grep -nH -e socket -r ../../../" "grep -nH -e server -r ../../../" "grep -nH -e emacs -r ../../../" "grep -nH -e connect -r ../../../" "grep -nH -e connect -r ../" "grep -nH -e emacs -r ../" "grep -nH -e emacs -r ." "grep -nH -e 'set-game' -r ../" "grep -nH -e java.jbc -r ." "grep -nH -e clojure.contrib -r ." "grep -nH -e clojure.contrib" "grep -nH \"*db*\" -r ." "grep -nH -e \"\\*db\\*\" -r ." "grep -nH -e \"*db*\" -r ." "grep -nH -e \"*db*\"" "grep -nH -e -r '*db*' ." "grep -nH -e *db*"))
(setq-default gud-rdebug-history '("rdebug --emacs 3 rspec product_spec.rb" "rdebug --emacs 3 product_spec.rb"))
(setq-default hi-lock-face-history '("hi-yellow" "hi-pink" "hi-green" "hi-blue" "hi-black-b" "hi-blue-b" "hi-red-b" "hi-green-b" "hi-black-hb"))
(setq-default ido-buffer-history '("gt" "in" "sc" "me" "ii" "mes" "ms" "scr" "any" "init.el" "init" "an" "pr" "prod" "ini" "pro" "initr" "car" "Ge" "bl" "blue" "ble" "spe"))
(setq-default ido-file-history '("journal." "init-org" "init-org.el" ".em" "gtd" "Pla" "Per" "init-org.el.bk" "in" "init-or" "org-mac" "org-ca" "l" "initorg" "init.e" "org" "si" "journal.org" "org-re" "arg-" "ecb" "init.el" "init-ide" "TAGS" "whi" "Si" "an" "init-an" ".ema" "wh"))
(setq-default kmacro-ring '(("f(d%;;;;" 0 "%d") ("d%p" 0 "%d") ([100 37 59 59 return 71 111 return escape 112 59 59 return] 0 "%d") ([121 37 100 37 59 102 99 111 114 101 46 backspace 45 backspace backspace 111 backspace 101 45 104 101 108 112 101 114 115 46 99 108 106 return 112 59 59 return] 0 "%d") ([119 119 119 119 47 108 105 115 116 return] 0 "%d")))
(setq-default minibuffer-history '("gtd" "r" "rev" "org-capture" "org-ver" "org-a" "or" "org-cap" "org-capimp" "smex-up" "org-" "git-sta" "load-p" "expand-file-name" "expand" "org-completing-read-no-i" "orgtogglear" "orgarchive" "gethash" "find-tag" "vi" "etags-tags-completion-table" "ido" "etags-complet" "tags-completion" "let" "interactive" "mapc" "prin1-to-string"))
(setq-default org-read-date-history '("   " "26    " "9:00 +1d    " "15:00+4:00    " "15:00    " "9:00    " "10:00    " "            "))
(setq-default org-tags-history '("die" "@phone" "phone" "TODO" "balh" "reading,emacs"))
(setq-default query-replace-history '("/vendor/jcarousel-gallery/images/" "images/"))
(setq-default ri-ruby-history '("Array"))
(setq-default serial-name-history '("/dev/ttys0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default shell-command-history '("sort" "find ." "ls -l"))
(setq-default slime-minibuffer-history '("(-main)" "(Math/round 10.5)" "(spinning-logged-in-with-a-prize)" "(state/get-game :crisscross)" "(spinning-logged-in)" "(doall (spinning-logged-in))" "*noir-session*" "game" "(spinning-logged-out)" "(spinning)" "(game/get-record 10)" "(session/put! :blah 10)" "(get-game :crisscross)" "(get-game)" "(test-spin-the-wheel)" "(or \"\" true)" "(or '' true)" "(or nil true)"))
(setq-default smex-history '(smex-update org-version git-status gtd list-load-path-shadows org-toggle-archive-tag org-agenda-archive))
(setq-default viper-ex-history '("w" "set sw 2" "q" "pwd" "grep" "cd" "db" "!pwd" "150,152w" "map \";[\" \";xclipboard-kill-rignng-save\"" "map \";q\" [f \\( (control k) \\; \\; \\ G o \\ escape p \\; \\; \\]" ":w" "map \";sr\"" "reg" "61,64s/^/;/" "map \";t\" [m r \\` t (control x) (control e) \\` r]" "map \";t\"" "map \";t\" [\\` a (control x) (control e)]" "w:w" "se" "g/defn/p" "g/defn/" "%s/defn/blah/g" "%s/defn/blah/gc"))
(setq-default viper-quote-region-history '("> "))
(setq-default viper-search-history '("prepare" "list" "blah" ""))
(setq-default viper-temp-command-ring '(nil))
(set-register 97 #("  (:require [java.jbc :as sql])
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 11 (fontified t face font-lock-builtin-face) 11 22 (fontified t) 22 25 (fontified t face font-lock-builtin-face) 25 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t)))
